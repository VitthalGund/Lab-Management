"""Initial database schema

Revision ID: daba92ba7798
Revises: 
Create Date: 2025-07-20 14:26:29.386493

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'daba92ba7798'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('schools',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('location', sa.Text(), nullable=True),
    sa.Column('principal_name', sa.String(), nullable=True),
    sa.Column('trustees', sa.Text(), nullable=True),
    sa.Column('about', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schools_id'), 'schools', ['id'], unique=False)
    op.create_index(op.f('ix_schools_name'), 'schools', ['name'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('middle_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('mobile_number', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('role', sa.Enum('admin', 'sub_admin', 'lab_head', 'teacher', 'student', name='userrole'), nullable=False),
    sa.Column('date_of_birth', sa.Date(), nullable=True),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('address', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_mobile_number'), 'users', ['mobile_number'], unique=True)
    op.create_table('labs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('school_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['school_id'], ['schools.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_labs_id'), 'labs', ['id'], unique=False)
    op.create_index(op.f('ix_labs_name'), 'labs', ['name'], unique=False)
    op.create_table('student_profiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('join_date_in_lab', sa.Date(), nullable=True),
    sa.Column('last_year_marks', sa.String(), nullable=True),
    sa.Column('performance_status', sa.Enum('excellent', 'satisfactory', 'needs_improvement', name='performancestatus'), nullable=True),
    sa.Column('mother_name', sa.String(), nullable=True),
    sa.Column('mother_contact', sa.String(), nullable=True),
    sa.Column('father_name', sa.String(), nullable=True),
    sa.Column('father_contact', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('teacher_skills',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('skill_name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_teacher_skills_id'), 'teacher_skills', ['id'], unique=False)
    op.create_table('enrollment_cohorts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('lab_id', sa.Integer(), nullable=False),
    sa.Column('academic_year', sa.Integer(), nullable=False),
    sa.Column('section', sa.Enum('cflc', 'grok', name='labsection'), nullable=False),
    sa.Column('standard', sa.Integer(), nullable=False),
    sa.Column('semester_start_date', sa.Date(), nullable=True),
    sa.Column('semester_end_date', sa.Date(), nullable=True),
    sa.Column('batch_name', sa.String(), nullable=True),
    sa.Column('grok_specialization', sa.Enum('iot', 'robotics', 'three_d_printing', 'abc_of_technology', name='grokspecialization'), nullable=True),
    sa.Column('created_by_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['lab_id'], ['labs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_enrollment_cohorts_id'), 'enrollment_cohorts', ['id'], unique=False)
    op.create_table('teacher_profiles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('lab_id', sa.Integer(), nullable=True),
    sa.Column('photo_url', sa.String(), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('date_of_joining', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['lab_id'], ['labs.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id')
    )
    op.create_table('cohort_teachers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('teacher_user_id', sa.Integer(), nullable=False),
    sa.Column('cohort_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cohort_id'], ['enrollment_cohorts.id'], ),
    sa.ForeignKeyConstraint(['teacher_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cohort_teachers_id'), 'cohort_teachers', ['id'], unique=False)
    op.create_table('projects',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_user_id', sa.Integer(), nullable=False),
    sa.Column('cohort_id', sa.Integer(), nullable=False),
    sa.Column('project_name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('video_links', sa.JSON(), nullable=True),
    sa.Column('photo_urls', sa.JSON(), nullable=True),
    sa.Column('submission_date', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['cohort_id'], ['enrollment_cohorts.id'], ),
    sa.ForeignKeyConstraint(['student_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_projects_id'), 'projects', ['id'], unique=False)
    op.create_table('student_enrollments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('student_user_id', sa.Integer(), nullable=False),
    sa.Column('cohort_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['cohort_id'], ['enrollment_cohorts.id'], ),
    sa.ForeignKeyConstraint(['student_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_enrollments_id'), 'student_enrollments', ['id'], unique=False)
    op.create_table('marks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('enrollment_id', sa.Integer(), nullable=False),
    sa.Column('assessment_name', sa.String(), nullable=False),
    sa.Column('marks_obtained', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('total_marks', sa.DECIMAL(precision=5, scale=2), nullable=False),
    sa.Column('date_recorded', sa.Date(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['enrollment_id'], ['student_enrollments.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_marks_id'), 'marks', ['id'], unique=False)
    op.create_table('project_stars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('starred_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_project_stars_id'), 'project_stars', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_project_stars_id'), table_name='project_stars')
    op.drop_table('project_stars')
    op.drop_index(op.f('ix_marks_id'), table_name='marks')
    op.drop_table('marks')
    op.drop_index(op.f('ix_student_enrollments_id'), table_name='student_enrollments')
    op.drop_table('student_enrollments')
    op.drop_index(op.f('ix_projects_id'), table_name='projects')
    op.drop_table('projects')
    op.drop_index(op.f('ix_cohort_teachers_id'), table_name='cohort_teachers')
    op.drop_table('cohort_teachers')
    op.drop_table('teacher_profiles')
    op.drop_index(op.f('ix_enrollment_cohorts_id'), table_name='enrollment_cohorts')
    op.drop_table('enrollment_cohorts')
    op.drop_index(op.f('ix_teacher_skills_id'), table_name='teacher_skills')
    op.drop_table('teacher_skills')
    op.drop_table('student_profiles')
    op.drop_index(op.f('ix_labs_name'), table_name='labs')
    op.drop_index(op.f('ix_labs_id'), table_name='labs')
    op.drop_table('labs')
    op.drop_index(op.f('ix_users_mobile_number'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_schools_name'), table_name='schools')
    op.drop_index(op.f('ix_schools_id'), table_name='schools')
    op.drop_table('schools')
    # ### end Alembic commands ###
